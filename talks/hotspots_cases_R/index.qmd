---
format: 
  revealjs:
    code-block-bg: true
    code-block-background: true
    code-copy: true
    chalkboard: true
    highlight-style: github
    slide-number: c/t
    logo: logo_cenaprece.jpeg
    footer: "[hub.com/fdzul](https://github.com/fdzul)"
    center-title-slide: true
---

<h2> Hotspots de la Transmisión de Dengue
<br> en R
</h2>

<h2>

</h2>

<hr>

<br>


<h3>Dr. Felipe Dzul Manzanilla</h3>

<h3>Dr. Fabián Correa-Morales</h3>

<h3>

</h3>
<br>
<h4>Date: 2024-01-31 </h4>

<h4> Update: 2024-01-31</h4>

<br>

<h4>


![](logo_curso_2024.png){.absolute top="170" left="650" width="450"}


## [Temario]{style="color:#003300;"}
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

- Flujograma del cálculo de los hotspots del dengue.
- Geocodificación.
- Extraer la localidad.
- Contar los casos por AGEB.
- Calcular los hotspots.
- Visualizar los hotspots.

## [Flujograma del Cálculo de los Hotspots del Dengue]{style="color:#003300;" .r-fit-text}
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

:::: {.columns}
::: {.column style="width: 50%; font-size: 80%"}
```{r, dpi=300,echo=FALSE, fig.align ="center", out.width = "100%"}
DiagrammeR::grViz("digraph {

  # graph definitions
  graph [layout = dot, rankdir = TB]
  
  # node definitions
  node [shape = rectangle, style = filled, color = grey] 
  
  # flowchart for hotspots
  sinave [label = 'SINAVE',  fillcolor = '#0F9D58', color = 'white', fontcolor = 'white']
  denv [label = 'Bases de DENV',  fillcolor = '#0F9D58', color = 'white', fontcolor = 'white']
  geocode [label = 'Geocodificación',  fillcolor = '#0F9D58', color = 'white', fontcolor = 'white']
  cases_ageb [label = 'Casos por AGEBs']
  z_score [label = 'Z-score']
  gi [label = 'Estadístico Espacial Local (Gi*)']
  bonferroni [label = 'Corrección de Bonferroni']
  hotspots [label = 'Hotspots', style = filled, color = orange]
  
  # flow chart for inegi
  inegi [label = 'INEGI', fillcolor = 'DeepSkyBlue', color = 'white', fontcolor = 'black']
  loc [label = 'Localidades Shapefile', fillcolor = 'DeepSkyBlue', color = 'white', fontcolor = 'black']
  ageb [label = 'AGEB Shapefile', fillcolor = 'DeepSkyBlue', color = 'white', fontcolor = 'black']
  loc_esp [label = 'Localidad de Ínteres', fillcolor = 'DeepSkyBlue', color = 'white', fontcolor = 'black']
  ageb_esp [label = 'AGEBs de la Localidad de Ínteres', fillcolor = 'DeepSkyBlue', color = 'white', fontcolor = 'black']
  mat [label = 'Matriz de Adjacencias', fillcolor = 'DeepSkyBlue', color = 'white', fontcolor = 'black']
  
  # edge definitions with the node IDs
  edge [color = black]
  sinave -> denv -> geocode -> cases_ageb -> z_score -> gi -> bonferroni -> hotspots 
  inegi -> {ageb, loc}
  loc -> loc_esp -> ageb_esp
  ageb -> ageb_esp
  ageb_esp -> mat
  mat -> cases_ageb 
 
  }", 
  height = 550)

```
:::
::: {.column style="width: 50%; font-size: 80%"}
```{r,  dpi=300,echo=FALSE, fig.align ="center", out.width = "100%"}
DiagrammeR::grViz("digraph {


# graph definitions
  graph [layout = dot, rankdir = TB]
  
  # node definitions
  node [shape = rectangle, style = filled, color = grey] 
  
  # flowchart for hotspots
  sinave [label = 'SINAVE',  fillcolor = '#0F9D58', color = 'white', fontcolor = 'white']
  denv [label = 'DENV dataset',  fillcolor = '#0F9D58', color = 'white', fontcolor = 'white']
  
   geocode [label = 'Geocoding',  fillcolor =  'orange', color = 'white', fontcolor = 'black']
   cases_ageb [label = 'Cases/AGEB',  fillcolor =  'orange', color = 'white', fontcolor = 'black']
   hotspots [label = 'Hotspots Analysis',  fillcolor =  'orange', color = 'white', fontcolor = 'black']
   vizualization [label = 'Visualization',  fillcolor =  'orange', color = 'white', fontcolor = 'black']
   static [label = 'Static Map',  fillcolor =  'DodgerBlue', color = 'white', fontcolor = 'white']
   interactive [label = 'Interactive Map',  fillcolor =  'DodgerBlue', color = 'white', fontcolor = 'white']
  
  # edge definitions with the node IDs
  edge [color = black]
  sinave -> denv -> geocode -> cases_ageb -> hotspots -> vizualization -> {static interactive}
  

}",
height = 550)
```
:::
::::

## [Geocodificación de las bases de dengue en R]{style="color:#003300;" .r-fit-text}
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

- Darse de alta en el servicio de Geocoding API de gooogle
- Subir las bases de dengue en R.
- Geocodificar las bases de Dengue.
- Unir y guardar las bases de dengue geocodificadas.

## [Geocodificación de las Bases de Dengue en R]{style="color:#003300;" .r-fit-text}
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

::: {.panel-tabset}

## Paso 1
```{r geo_paso1}
#| echo: true
#| output: false
# Step 1. load dengue dataset the current week ####
#y <- denhotspots::read_dengue_dataset(path = "1.data/current_week/DENGUE2_.txt",
#                                      spatial_resolution = "country",
#                                      status_caso = c(1, 2)) 
# Step 2. load dengue dataset the last week ####
#x <- denhotspots::read_dengue_dataset(path = "1.data/last_week/DENGUE2_.txt",
#                                      spatial_resolution = "country",
#                                      status_caso = c(1, 2))
# Step 3. extract the ids not geocoded ####
#z <- y |>
#    dplyr::filter(!FOL_ID %in% unique(x$FOL_ID)) |>
#    dplyr::arrange(FOL_ID)

# Step 4. save the results ####
#write.csv(z, 
#          file = "dengue_mx_2024_01_23.csv")
```


## Paso 2
```{r geo_paso2}
#| echo: true
#| output: false
# Step 1. subir el vectores de direcciones ####
# addresses <- denhotspots::data_geocoden(infile = "dengue_mx_2024_01_23",
#                                        data = FALSE,
#                                        sinave_new = TRUE)
# Step 2. text manipulation ####
# stringr::str_subset(addresses, "#")
# addresses <- stringr::str_replace_all(addresses,
#                                      pattern = "#",
#                                      replacement = " ")
# Step 3. geocoding ####
# denhotspots::geocoden(infile = "dengue_mx_2024_01_23")
# Step 4. load the dengue geocoded & dengue dataset #####
# z <- readRDS("~/Library/CloudStorage/OneDrive-Personal/proyects/geocoding_mex/2024/dengue_mx_2024_01_23_temp_geocoded.rds")
# Step 5. load the dengue dataset ####
#data <- denhotspots::data_geocoden(infile = "dengue_mx_2024_01_23", 
#                                   data = TRUE,
#                                   sinave_new = TRUE)
# Step 6. save the results #####
#denhotspots::save_geocoden(x = z,
#                           y = data,
#                           directory = "9.geocoded_data",
#                           loc = "dengue_mx_2024_01_23")
```

## Paso 3
```{r geo_paso3}
#| echo: true
#| output: false
#Step 1 load geocoded dengue dataset current week ####
# load("~/Library/CloudStorage/OneDrive-Personal/proyects/geocoding_mex/2024/9.geocoded_data/geo_dengue_mx_2024_01_23.RData")
# Step 2. load geocoded dengue dataset last week ####
# load("~/Library/CloudStorage/OneDrive-Personal/proyects/geocoding_mex/2024/8.RData/denmex_2024.RData")
# Step 3. row binding ####
# z <- rbind(z, y)
# Step 4. load the current week dataset 
# w <- denhotspots::read_dengue_dataset(path = "1.data/current_week/DENGUE2_.txt",
#                                      spatial_resolution = "country",
#                                      status_caso = c(1, 2))
# Step 5. eliminate the CASOS DESCARTADOS ####
# z <- z |>
#    dplyr::filter(VEC_ID %in% unique(w$VEC_ID)) |>
#    dplyr::arrange(VEC_ID)
# Step 6. save the results ####
# save(z, file = "8.RData/denmex_2024.RData")

```


:::



## [Laboratorio 1. Geocodificación de las Bases de Dengue en R]{style="color:#003300;" .r-fit-text}
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

## [Dios Botic]{style="color:#003300;"}
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

-   ***Bio*** : [https://fdzul.github.io/web_site_fadm/]()

-   ***email*** : [felipe.dzul.m\@gmail.com]()

-   ***celular*** : [9999580167]()

-   ***slides***: [https://calm-hummingbird-41cb33.netlify.app/talks/hotspots_cases_R/#/](https://calm-hummingbird-41cb33.netlify.app/talks/hotspots_cases_R/#/)